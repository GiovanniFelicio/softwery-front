[{"/home/engcarvalho/Desktop/projects/softwery-front/src/index.js":"1","/home/engcarvalho/Desktop/projects/softwery-front/src/reportWebVitals.js":"2","/home/engcarvalho/Desktop/projects/softwery-front/src/Softwery.js":"3","/home/engcarvalho/Desktop/projects/softwery-front/src/components/Membro/index.js":"4","/home/engcarvalho/Desktop/projects/softwery-front/src/components/Feed/index.js":"5","/home/engcarvalho/Desktop/projects/softwery-front/src/components/Forms/SimpleForm.js":"6","/home/engcarvalho/Desktop/projects/softwery-front/src/components/Layout/Aside.js":"7","/home/engcarvalho/Desktop/projects/softwery-front/src/components/pages/Login.js":"8"},{"size":302,"mtime":1609699556546,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1609685604698,"results":"11","hashOfConfig":"10"},{"size":495,"mtime":1609722419931,"results":"12","hashOfConfig":"10"},{"size":618,"mtime":1609710406949,"results":"13","hashOfConfig":"10"},{"size":459,"mtime":1609710160790,"results":"14","hashOfConfig":"10"},{"size":2785,"mtime":1609713918498,"results":"15","hashOfConfig":"10"},{"size":1191,"mtime":1609718883695,"results":"16","hashOfConfig":"10"},{"size":2372,"mtime":1609721715518,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"c19g57",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"/home/engcarvalho/Desktop/projects/softwery-front/src/index.js",[],["40","41"],"/home/engcarvalho/Desktop/projects/softwery-front/src/reportWebVitals.js",[],"/home/engcarvalho/Desktop/projects/softwery-front/src/Softwery.js",["42"],"import React, {Component} from 'react';\nimport Login from './components/pages/Login'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'reactstrap';\nimport './static/css/all.min.css'\nimport './static/css/style.css'\n\nclass Softwery extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <Login/>\n            </div>\n        );\n    }\n}\n\n\n\nexport default Softwery;","/home/engcarvalho/Desktop/projects/softwery-front/src/components/Membro/index.js",[],["43","44"],"/home/engcarvalho/Desktop/projects/softwery-front/src/components/Feed/index.js",[],"/home/engcarvalho/Desktop/projects/softwery-front/src/components/Forms/SimpleForm.js",["45"],"import React, {Component} from 'react';\nimport img1 from '../../assets/img1.jpeg'\nimport '../../assets/style.css'\n\nclass SimpleForm extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            form:{\n                login:'',\n                password:'',\n                sexo: '',\n                fraseTexto:''\n            }\n        }\n\n        this.frases = ['frase1', 'frase2', 'frase3', \"frase4\"]\n\n        this.changeValue = this.changeValue.bind(this)\n        this.cadastrar = this.cadastrar.bind(this)\n        this.breakCookie = this.breakCookie.bind(this)\n\n    }\n    \n    changeValue(e){\n        let value = e.target.value\n        let form = this.state.form\n        form[e.target.name] = value\n        this.setState({form:form})\n    }\n\n    cadastrar(e){\n        const {login, password, sexo} = this.state.form;\n\n        if(login !== '' && password !== '' && sexo !== ''){\n            this.setState({error: ''})            \n            alert(`Login: ${login} \\nPassword: ${password} \\nSexo: ${sexo}`)\n        } else {\n            this.setState({error: 'Oopps'})\n        }\n\n        e.preventDefault();\n    }\n    breakCookie(){\n        let state = this.state;\n        let random = Math.floor(Math.random() * this.frases.length);\n        state.fraseTexto = this.frases[random]\n        this.setState(state)\n    }\n\n    render(){\n        return(\n            <div className=\"container\">\n                <h2>Login</h2>\n                <img src={img1} className=\"img\"/>\n                <Botao acao={this.breakCookie}/>\n                <h5 className=\"texto\">{this.state.fraseTexto}</h5>\n                {this.state.error && <p>{this.state.error}</p>}\n                <form onSubmit={this.cadastrar}>\n                    Login: <input type=\"text\" name=\"login\" value={this.state.form.login} \n                        onChange={this.changeValue}/>\n                    <br/>\n                    Password: <input type=\"password\" name=\"password\" value={this.state.form.password}\n                        onChange={this.changeValue}/>\n                    <br/>\n                    Sexo: <select name=\"sexo\" value={this.state.form.sexo} \n                        onChange={this.changeValue}>\n                        <option value=\"\">Select</option>\n                        <option value=\"m\">M</option>\n                        <option value=\"f\">F</option>\n                    </select>\n                    <br/>\n                    <input type=\"submit\" value=\"Logar\"/>\n                </form>\n                \n            </div>\n        );\n    }\n}\n\nclass Botao extends Component{\n    render(){\n        return (\n            <div>\n                <button onClick={this.props.acao}>Abrir Foto</button>\n            </div>\n        );\n    }\n}\n\nexport default SimpleForm;","/home/engcarvalho/Desktop/projects/softwery-front/src/components/Layout/Aside.js",["46","47"],"/home/engcarvalho/Desktop/projects/softwery-front/src/components/pages/Login.js",["48"],"import React, {Component} from 'react';\n\nclass Login extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n        }\n\n    }\n    \n\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"login-wrap customscroll d-flex align-items-center flex-wrap justify-content-center pd-20\">\n                    <div className=\"login-box bg-white box-shadow pd-30 border-radius-5\">\n                        <img src=\"\" alt=\"login\" className=\"login-img\"/>\n                        <h2 className=\"text-center mb-30\">LogIn</h2>\n                        <form method=\"POST\">\n                            <div className=\"input-group custom input-group-lg\">\n                                <input type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Login\"/>\n                                <div className=\"input-group-append custom\">\n                                    <span className=\"input-group-text\"><i className=\"fa fa-user\" aria-hidden=\"true\"></i></span>\n                                </div>\n                            </div>\n                            <div className=\"input-group custom input-group-lg\">\n                                <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"**********\"/>\n                                <div className=\"input-group-append custom\">\n                                    <span className=\"input-group-text\"><i className=\"fa fa-lock\" aria-hidden=\"true\"></i></span>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-sm-6\">\n                                    <div className=\"input-group\">\n                                        <input className=\"btn btn-outline-primary btn-lg btn-block\" type=\"submit\" value=\"Sign In\"/>\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <div className=\"forgot-password padding-top-10\"><a href=\"#\">Forgot Password</a></div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;",["49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":4,"column":10,"nodeType":"57","messageId":"58","endLine":4,"endColumn":16},{"ruleId":"51","replacedBy":"59"},{"ruleId":"53","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":56,"column":17,"nodeType":"63","endLine":56,"endColumn":50},{"ruleId":"61","severity":1,"message":"62","line":32,"column":29,"nodeType":"63","endLine":32,"endColumn":73},{"ruleId":"64","severity":1,"message":"65","line":34,"column":29,"nodeType":"63","endLine":34,"endColumn":58},{"ruleId":"64","severity":1,"message":"66","line":40,"column":85,"nodeType":"63","endLine":40,"endColumn":97},{"ruleId":"51","replacedBy":"67"},{"ruleId":"53","replacedBy":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["69"],["70"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["69"],["70"],"no-global-assign","no-unsafe-negation"]